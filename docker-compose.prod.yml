version: '3.8'

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - .env.prod
    environment:
      - ENVIRONMENT=production
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data:ro
    networks:
      - mandimonitor_prod
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production database (if using external DB)
  # database:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: mandimonitor_prod
  #     POSTGRES_USER: ${DB_USER_PROD}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD_PROD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - mandimonitor_prod
  #   restart: unless-stopped

  # Reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - bot
    networks:
      - mandimonitor_prod
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Monitoring and logging
  monitoring:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mandimonitor_prod
    restart: unless-stopped

networks:
  mandimonitor_prod:
    driver: bridge

volumes:
  prometheus_data:
  postgres_data:
