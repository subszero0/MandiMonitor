services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    env_file: .env.dev
    environment:
      - ENVIRONMENT=development
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    restart: unless-stopped

    # Security configurations
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

    # Temporary file system for writable operations
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/logs:size=50m

    ports:
      - "127.0.0.1:8000:8000"  # Bind to localhost only

    volumes:
      - ./dealbot.db:/app/dealbot.db:ro  # Read-only database

    # Health checks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run --token=${TUNNEL_TOKEN}
    restart: unless-stopped
    depends_on:
      bot:
        condition: service_healthy

    # Security for Cloudflare tunnel
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  cron:
    image: alpine:3.19
    volumes:
      - ./scripts/backup_db.sh:/backup_db.sh:ro
      - ./dealbot.db:/dealbot.db:ro
      - ./backups:/backups:rw
    entrypoint: ["/bin/sh", "-c"]
    command: |
      # Install cron and set up the backup job
      apk add --no-cache dcron
      echo '0 2 * * * /backup_db.sh' | crontab -
      crond -f

    # Security configurations
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 64M

    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2" 